{
	"info": {
		"_postman_id": "e4ba0559-8016-437b-9147-6b2132ef9a4f",
		"name": "API_Booking",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "27687150"
	},
	"item": [
		{
			"name": "Token",
			"item": [
				{
					"name": "Gerar Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.request.method =='POST'){\r",
									"\r",
									"    pm.test(\"Status code is 200\", function () {\r",
									"       pm.response.to.have.status(200);\r",
									"    });\r",
									"\r",
									"    pm.test(\"Status code name has string\", function () {\r",
									"       pm.response.to.have.status(\"OK\");\r",
									"    });\r",
									"    pm.environment.set(\"token\", pm.response.json().token)\r",
									"\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://restful-booker.herokuapp.com/auth"
					},
					"response": []
				}
			]
		},
		{
			"name": "Booking",
			"item": [
				{
					"name": "Consultar Reservas",
					"item": [
						{
							"name": "Todas as Reservas",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{url_base}}booking"
							},
							"response": []
						}
					]
				},
				{
					"name": "Consultar Reserva especifica",
					"item": [
						{
							"name": "Buscar reserva por ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{url_base}}booking/{{id_reserva}}"
							},
							"response": []
						}
					]
				},
				{
					"name": "Criar Reserva",
					"item": [
						{
							"name": "Criar nova reserva",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.iterationData.get(\"first_name\")\r",
											"pm.iterationData.get(\"last_name\")\r",
											"pm.iterationData.get(\"total_price\")\r",
											"pm.iterationData.get(\"checkin\")\r",
											"pm.iterationData.get(\"checkout\")"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "/*{\r\n    \"firstname\" : \"{{first_name}}\",\r\n    \"lastname\" : \"{{last_name}}\",\r\n    \"totalprice\" : {{total_price}},\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"{{checkin}}\",\r\n        \"checkout\" : \"{{checkout}}\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}*/\r\n\r\n{\r\n    \"firstname\" : \"Jonas\",\r\n    \"lastname\" : \"Santos\",\r\n    \"totalprice\" : 1000,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2025-07-20\",\r\n        \"checkout\" : \"2025-07-30\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{url_base}}booking"
							},
							"response": []
						}
					]
				},
				{
					"name": "Atualizar Reserva",
					"item": [
						{
							"name": "Editar Reserva",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"/*pm.iterationData.get(\"first_name_edit\");\r",
											"pm.iterationData.get(\"last_name_edit\");\r",
											"pm.iterationData.get(\"total_price_edit\");\r",
											"pm.iterationData.get(\"checkin_edit\");\r",
											"pm.iterationData.get(\"checkout_edit\");*/\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Cookie",
										"value": "token={{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"firstname\" : \"Eliana\",\r\n    \"lastname\" : \"Brilhante\",\r\n    \"totalprice\" : 2000,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2025-08-01\",\r\n        \"checkout\" : \"2025-08-06\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{url_base}}booking/{{id_reserva}}"
							},
							"response": []
						}
					]
				},
				{
					"name": "Excluir Reserva",
					"item": [
						{
							"name": "Excluir Reserva",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Cookie",
										"value": "token={{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": "{{url_base}}booking/{{id_reserva}}"
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": {
			"token": "{{token}}"
		}
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"if(pm.request.method =='GET'){\r",
					"\r",
					"    pm.test(\"Status code is 200\", function () {\r",
					"       pm.response.to.have.status(200);\r",
					"    });\r",
					"\r",
					"    pm.test(\"Status code name has string\", function () {\r",
					"       pm.response.to.have.status(\"OK\");\r",
					"    });\r",
					"    try{\r",
					"    pm.environment.set(\"id_reserva\", pm.response.json()[0].bookingid);\r",
					"    console.log(pm.environment.get(\"id_reserva\"))\r",
					"    }\r",
					"    catch(erro){\r",
					"        pm.environment.set(\"id_reserva\", pm.response.json().bookingid);\r",
					"    }\r",
					"}\r",
					"\r",
					"\r",
					"if(pm.request.method=='PUT'){\r",
					"\r",
					"    pm.test(\"Status code is 200\", function () {\r",
					"       pm.response.to.have.status(200);\r",
					"    });\r",
					"\r",
					"    pm.test(\"Status code name has string\", function () {\r",
					"       pm.response.to.have.status(\"OK\");\r",
					"    });\r",
					"}\r",
					"\r",
					"if(pm.request.method=='POST'){\r",
					"\r",
					"    pm.test(\"Status code is 200\", function () {\r",
					"       pm.response.to.have.status(200);\r",
					"    });\r",
					"\r",
					"    pm.test(\"Status code name has string\", function () {\r",
					"       pm.response.to.have.status(\"OK\");\r",
					"    });\r",
					"    pm.environment.set(\"id_reserva\", pm.response.json().bookingid);\r",
					"\r",
					"}\r",
					"\r",
					"if(pm.request.method=='GET' || pm.request.method=='POST'){\r",
					"    pm.test(\"Response time is less than 2000ms\", function () {\r",
					"        pm.expect(pm.response.responseTime).to.be.below(2000);\r",
					"    });\r",
					"\r",
					"}\r",
					"\r",
					"if(pm.request.method=='DELETE'){\r",
					"    pm.test(\"Status code is 201\", function () {\r",
					"       pm.response.to.have.status(201);\r",
					"    });\r",
					"    \r",
					"    pm.test(\"Status code name has string\", function (){\r",
					"        pm.response.to.have.status(\"Created\");\r",
					"    });\r",
					"}"
				]
			}
		}
	]
}